import { Tune } from '@mui/icons-material';
import { useState } from 'react';

const FilterSection = () => {
    const [showMoreFilters, setShowMoreFilters] = useState(false); // State to toggle additional filters
    const [selectedFilters, setSelectedFilters] = useState([]); // State to track selected filters

    const toggleShowMoreFilters = () => {
        setShowMoreFilters(!showMoreFilters); // Toggle between showing more filters and hiding them
    };

    const toggleFilterSelection = (filter) => {
        if (selectedFilters.includes(filter)) {
            setSelectedFilters(selectedFilters.filter((item) => item !== filter)); // Remove filter if already selected
        } else {
            setSelectedFilters([...selectedFilters, filter]); // Add filter if not selected
        }
    };

    const clearAllFilters = () => {
        setSelectedFilters([]); // Reset selected filters
    };

    return (
        <div className="filter-section bg-white border border-gray-300 rounded-lg p-4">
            {/* Title */}
            <div className="flex justify-between items-center mb-4">
                <h2 className="text-lg font-bold text-gray-800">Ch·ªçn ph√≤ng</h2>
                <a href="#" className="text-blue-600 hover:underline text-sm font-bold">Ch√∫ng t√¥i kh·ªõp gi√°!</a>
            </div>

            {/* Filters */}
            <div className="filters">
                <div className="flex justify-between items-center mb-4">
                    <div className="flex items-center space-x-2">
                        <Tune className="text-gray-600" />
                        <span className="text-sm font-bold text-gray-800">Ch·ªçn l·ªçc:</span>
                    </div>
                    <button
                        onClick={clearAllFilters}
                        className="text-blue-600 hover:underline text-sm"
                    >
                        X√≥a h·∫øt
                    </button>
                </div>

                {/* Tip */}
                <p className="text-sm text-gray-600 mb-4">
                    <span className="text-green-600 font-bold">M·∫πo:</span> Ph·∫£i m·ªôt th·ªùi gian m·ªõi ƒë·∫øn ng√†y qu√Ω kh√°ch ƒë·∫øn/ƒëi. H√£y th·ª≠ m·ªôt ∆∞u ƒë√£i c√≥
                    <a href="#" className="text-green-600 hover:underline"> h·ªßy Mi·ªÖn Ph√≠</a> ƒë·ªÉ linh ho·∫°t trong tr∆∞·ªùng h·ª£p k·∫ø ho·∫°ch thay ƒë·ªïi.
                </p>

                {/* Filter Buttons */}
                <div className="grid grid-cols-3 gap-2">
                    {[
                        { label: 'Kh√¥ng h√∫t thu·ªëc (5)', icon: 'üö≠' },
                        { label: 'Thanh to√°n t·∫°i n∆°i ·ªü (10)', icon: 'üè†' },
                        { label: 'H∆∞·ªõng th√†nh ph·ªë (1)', icon: 'üèôÔ∏è' },
                        { label: 'H∆∞·ªõng bi·ªÉn (3)', icon: 'üåä' },
                        { label: 'Ban c√¥ng/s√¢n hi√™n', icon: 'üèûÔ∏è' },
                        { label: 'ƒê·∫∑t kh√¥ng c·∫ßn th·∫ª t√≠n d·ª•ng (4)', icon: 'üí≥' },
                        { label: 'H·ªßy mi·ªÖn ph√≠ (10)', icon: 'üîÑ' },
                    ].map((filter, index) => (
                        <button
                            key={index}
                            onClick={() => toggleFilterSelection(filter.label)}
                            className={`flex items-center border rounded-full px-4 py-2 text-sm ${
                                selectedFilters.includes(filter.label)
                                    ? 'bg-blue-600 text-white'
                                    : 'bg-white border-gray-300 text-gray-800'
                            }`}
                        >
                            <span className="mr-2">{filter.icon}</span> {filter.label}
                        </button>
                    ))}
                </div>
            </div>
        </div>
    );
};

export default FilterSection;